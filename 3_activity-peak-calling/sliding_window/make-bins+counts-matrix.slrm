#!/bin/bash
#SBATCH --mail-user=tyler.j.hansen@vanderbilt.edu
#SBATCH --mail-type=ALL
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=12
#SBATCH --time=4:00:00
#SBATCH --mem=16G
#SBATCH --output=featureCounts-%j.out
##################
#Tyler Hansen 4.23.21
#This is a slurm script to create a counts matrix using binned OCR peaks and ATAC-STARR mapped read files.
#This script will first generate genomic bins from OCR peaks. The bin size was tested and 50bp was determined to be the optimal binsize. 
#The bins are converted to simple annotation format and then a counts matrix is made with featureCounts.
#featureCount option descriptions:
#  a is the annotation file and F is the format.
#  T is number of threads. 
#  p specifies paired-end data. B requires both ends mapped for paired end data
#  -O is allowmulioverlap. It says one read can be assigned to more than one bin if it overlaps multiple bins.
# --minOverlap 1 says that count the read for the bin if it overlaps by at least one bp. 
##################

#Define path ariables
REGION_DIR='/data/hodges_lab/ATAC-STARR_V2/data/accessibility/genrich_ATAC-like_peaks'
OUTPUT_DIR='/data/hodges_lab/ATAC-STARR_V2/data/activity/individual/bins' 

#Use bedtools makewindows to make sliding windows within open chromatin regions. Syntax is: bedtools makewindows [-s <step size>] [-g <GENOME>|-b <BED>] [-w <window size> | -n <n windows>]
module restore tools
bedtools makewindows -s 10 -b ${REGION_DIR}/GM12878inGM12878_DNA_genrich_0.0001-qvalue.narrowPeak -w 50 | awk 'BEGIN{OFS=FS="\t"}{if ($3-$2 == 50) print}' - > ${OUTPUT_DIR}/GM12878inGM12878_50bp-sliding-bins_10bp-step.bed

#Define new path variables.
BAMS='/data/hodges_lab/ATAC-STARR_V2/data/bams/pos-sorted'
REGION_DIR='/data/hodges_lab/ATAC-STARR_V2/data/activity/individual/bins'
OUTPUT_DIR='/data/hodges_lab/ATAC-STARR_V2/data/activity/individual/cts_matricies/bin-method'

#Format bin files to SAF: 
    #Header: GeneID Chr Start End Strand
    #Body:   497097 chr1 3204563 3207049 -
awk '{OFS=FS="\t"}; BEGIN{print "GeneID","Chr","Start","End","Strand"};{print "bin_"NR, $1,$2,$3,"."}' ${REGION_DIR}/GM12878inGM12878_50bp-sliding-bins_10bp-step.bed > ${REGION_DIR}/GM12878inGM12878_50bp-sliding-bins_10bp-step.saf

#Assign reads to each bin. 
#Compare with and without duplicates. Change this by using the unique bam files. 
#Duplicates-included
featureCounts -p -O -B --minOverlap 1 -T 12 -F SAF -G /data/hodges_lab/hg38_genome/hg38.fa \
        -a ${REGION_DIR}/GM12878inGM12878_50bp-sliding-bins_10bp-step.saf  \
        -o ${OUTPUT_DIR}/GM12878inGM12878_counts_bin-method_50bp-bins_with-duplicates.tsv \
        ${BAMS}/GM12878inGM12878_DNA_Rep1.filtered.pos-sorted.bam \
        ${BAMS}/GM12878inGM12878_DNA_Rep2.filtered.pos-sorted.bam \
        ${BAMS}/GM12878inGM12878_RNA_Rep1.filtered.pos-sorted.bam \
        ${BAMS}/GM12878inGM12878_RNA_Rep2.filtered.pos-sorted.bam

#Duplicates-removed
featureCounts -p -O -B --minOverlap 1 -T 12 -F SAF -G /data/hodges_lab/hg38_genome/hg38.fa \
        -a ${REGION_DIR}/GM12878inGM12878_50bp-sliding-bins_10bp-step.saf  \
        -o ${OUTPUT_DIR}/GM12878inGM12878_counts_bin-method_50bp-bins_no-duplicates.tsv \
        ${BAMS}/GM12878inGM12878_DNA_Rep1.unique.pos-sorted.bam \
        ${BAMS}/GM12878inGM12878_DNA_Rep2.unique.pos-sorted.bam \
        ${BAMS}/GM12878inGM12878_RNA_Rep1.unique.pos-sorted.bam \
        ${BAMS}/GM12878inGM12878_RNA_Rep2.unique.pos-sorted.bam