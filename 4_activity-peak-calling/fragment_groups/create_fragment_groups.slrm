#!/bin/bash
#SBATCH --mail-user=tyler.j.hansen@vanderbilt.edu
#SBATCH --mail-type=ALL
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1
#SBATCH --time=24:00:00
#SBATCH --mem=8G
#SBATCH --output=create_fragment-groups-%j.out
##################
# Tyler Hansen 1.17.21
#This is a shell script to create a GFF file of "fragment groups". This will be used as input for the companion HTSeq-count script, which will make a counts matrix.
#The input file is a n-sorted bam file which is a merge of all DNA replicates for a given sample. (Ex: GGD1 and GGD2). 
#This script uses the following parameters to make fragment groups: 
# OVERLAP_PCT=0.75
# OVERLAP_RULE=fration-both
# NUM_MEMBERS=10
##################

#Function: create_FGs [INPUT_FILE] [OUTPUT_DIR] [OUTPUT_PREFIX]
create_FGs () {
    #variables
    INPUT_FILE=$1 
    OUTPUT_FILE=$2
        
    #load software
    module load GCC/8.2.0 SAMtools/1.9 BEDTools/2.28.0 
    
    ### OPERATION ###
    # This operation is one very long pipe. The comments below explain each step of the process. . 
    # 1. Convert mapped read pairs (input file) to bedpe file format.
    # 2. Use awk to print the coordinates of the sequenced fragment.
    # 3. Sort by chr location and remove duplicates with sort -u.
    # 4. Create synthetic fragment groups from the bed-formated sequence fragments that overlap by 75%. Use the fraction-both setting, which requires both sequence fragments to overlap each other by 75% rather than only one. 
    # 5. Remove fragment groups that are created using less than 10 sequence fragments (awk filters by member, the cut removes the first column, which reports the number of members per fragment group, uniq just ensures all regions are unique and there are no duplicates).
    # 6. Convert to a gff file format and write to output file.
    bedtools bamtobed -i $INPUT_FILE -bedpe | awk 'BEGIN{FS=OFS="\t"} {print $1,$2,$6,$9,$7}' - | sort -k1,1 -k2,2n -k3,3n -u - | bedmap --count --echo-map-range --fraction-both 0.75 --delim '\t' - | awk '$1>=10' - | cut -f2- - | sort -k1,1 -k2,2n -k3,3n - | uniq - | awk 'BEGIN {OFS=FS="\t"}{print $1,"curated","accessible_region",$2,$3,".",".",".","Peak_ID=Peak_"NR}' - > $OUTPUT_FILE
}
#################
#Variables
INPUT_DIR='/data/hodges_lab/ATAC-STARR_V2/data/bams/merged_bams'
OUTPUT_DIR='/data/hodges_lab/ATAC-STARR_V2/data/fragment_groups' 

#GMinGM
create_FGs ${INPUT_DIR}/GM12878inGM12878_DNA_merged.n-sorted.bam ${OUTPUT_DIR}/GM12878inGM12878_fragment-groups.gff

#LCLinLCL
create_FGs ${INPUT_DIR}/LCL8664inLCL8664_DNA_merged.n-sorted.bam ${OUTPUT_DIR}/LCL8664inLCL8664_fragment-groups.gff

#GMinLCL
create_FGs ${INPUT_DIR}/GM12878inLCL8664_DNA_merged.n-sorted.bam ${OUTPUT_DIR}/GM12878inLCL8664_fragment-groups.gff

#LCLinGM
create_FGs ${INPUT_DIR}/LCL8664inGM12878_DNA_merged.n-sorted.bam ${OUTPUT_DIR}/LCL8664inGM12878_fragment-groups.gff

